import "hashes/pedersen/512bit" as pedersenHash;

// https://stackoverflow.com/questions/3062746/special-simple-random-number-generator
def next_rand(u32 mut seed) -> u32 {
  seed = seed ^ (seed << 13);
  seed = seed ^ (seed >> 7);
  seed = seed ^ (seed << 5);
  return seed;
}

def shuffle(u32 mut seed) -> u32[52] {
    u32[52] mut ret = [0; 52];
    for u32 i in 0..52 {
        ret[i] = i;
    }

    u32 mut tmp = 0;
    u32 mut r = 0;
    for u32 i in 0..52 {
        r = (seed) % (52 - i);

        tmp = ret[51 - i];
        ret[51 - i] = ret[r];
        ret[r] = tmp;
        
        seed = next_rand(seed);
    }

    return ret;
}

def main(u32 R1, u32 R2) -> u32[52] {
    u32[16] prepareR1R2 = [R1, R2, R1, R2, R1, R2, R1, R2, R1, R2, R1, R2, R1, R2, R1, R2];
    u32[8] hashedR1R2 = pedersenHash(prepareR1R2);

    u32[52] cards = shuffle(R1);

    return cards;
}